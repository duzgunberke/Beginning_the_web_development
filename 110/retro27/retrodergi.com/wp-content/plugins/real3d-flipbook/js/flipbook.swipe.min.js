/* v 3.9
author http://codecanyon.net/user/creativeinteractivemedia/portfolio?ref=creativeinteractivemedia
*/

var FLIPBOOK = FLIPBOOK || {};
FLIPBOOK.BookSwipe = function(i, e, s, t) {
    this.options = t, this.singlePage = t.singlePageMode, this.pageWidth = this.options.pageWidth, this.pageHeight = this.options.pageHeight, this.slides = [], this.pagesArr = [], this.leftPage = 0, this.rightPage = 0, this.rotation = 0, this.prevPageEnabled = !1, this.setRightIndex(t.rightToLeft ? t.pages.length : 0), this.currentSlide = 0, this.flipping = !1, this.wrapper = e, this.$wrapper = jQuery(e), this.scroller = i, this.$scroller = jQuery(this.scroller).removeClass("book").addClass("flipbook-carousel-scroller"), this.iscroll = new IScroll(this.wrapper, {
        snap: !0,
        snapSpeed: 200 * this.options.pageFlipDuration,
        freeScroll: !0,
        scrollX: !0,
        scrollY: !1,
        preventDefault: !1,
        disableTouch: !0,
        eventPassthrough: "vertical"
    });
    for (var o = 0; o < 3; o++) {
        var h = jQuery('<div class="flipbook-carousel-slide"><div class="slide-inner"/></div>"').appendTo(this.$scroller);
        this.slides.push(h)
    }
    this.slides[0].iscroll = new IScroll(this.slides[0][0], {
        zoom: !0,
        scrollX: !0,
        scrollY: !0,
        freeScroll: !0,
        keepInCenterV: !0,
        keepInCenterH: !0,
        preventDefault: !1
    }), this.slides[2].iscroll = new IScroll(this.slides[2][0], {
        zoom: !0,
        scrollX: !0,
        scrollY: !0,
        freeScroll: !0,
        keepInCenterV: !0,
        keepInCenterH: !0,
        preventDefault: !1
    }), this.slides[1].iscroll = new IScroll(this.slides[1][0], {
        zoom: !0,
        scrollX: !0,
        scrollY: !0,
        freeScroll: !0,
        keepInCenterV: !0,
        keepInCenterH: !0,
        preventDefault: !1
    });
    for (o = 0; o < 3; o++) this.slides[o].iscroll.on("zoomEnd", function() {
        var i = t.main.zoom;
        this.options.eventPassthrough = 1 < i ? "" : "vertical", this.options.freeScroll = 1 < i, this.refresh()
    });
    var n;
    this.resizeInnerSlides();
    for (t.rightToLeft, t.numPages, t.pdfMode, o = 0; o < t.numPages; o++) n = new FLIPBOOK.PageSwipe(s, t, o, t.pages[o].src, t.pages[o].htmlContent), this.pagesArr.push(n), t.loadAllPages && n.load();
    var l = this;
    this.iscroll.on("scrollStart", function() {}), this.iscroll.on("scrollEnd", function() {
        var i = this.currentPage.pageX;
        l.currentSlide != i && (l.singlePage ? i > l.currentSlide ? l.setRightIndex(l.rightIndex + 1) : i < l.currentSlide && l.setRightIndex(l.rightIndex - 1) : i > l.currentSlide ? l.setRightIndex(l.rightIndex + 2) : i < l.currentSlide && l.setRightIndex(l.rightIndex - 2), l.currentSlide = i, l.updateVisiblePages(), l.flipping = !1)
    }), this.flipEnabled = !0, this.nextEnabled = !0, this.prevEnabled = !0, s.on("toolMove", function() {
        l.updateTool()
    }), s.on("toolSelect", function() {
        l.updateTool()
    }), s.on("pageLoaded", function(i) {})
}, FLIPBOOK.BookSwipe.prototype.constructor = FLIPBOOK.BookSwipe, FLIPBOOK.BookSwipe.prototype = {
    goToPage: function(i, e) {
        if (this.enabled && this.flipEnabled) {
            if (i > this.options.pages.length && (i = this.options.pages.length), !this.singlePage && i % 2 == 0 || i--, (isNaN(i) || i < 0) && (i = 0), this.resetZoom(), e) return this.setRightIndex(i), void this.updateVisiblePages();
            this.singlePage ? (this.options.rightToLeft && this.options.oddPages && i < 1 && (i = 1), i > this.rightIndex ? (this.setSlidePages(this.currentSlide + 1, [i]), this.setRightIndex(i - 1), this.nextPage(e)) : i < this.rightIndex && (this.setSlidePages(this.currentSlide - 1, [i]), this.setRightIndex(i + 1), this.prevPage(e))) : (this.options.rightToLeft && this.options.oddPages && i < 2 && (i = 2), i > this.rightIndex ? i >= this.pagesArr.length ? (this.setSlidePages(2, [i - 1, i]), this.setRightIndex(i - 2), this.goToSlide(2, e)) : (this.setSlidePages(this.currentSlide + 1, [i - 1, i]), this.setRightIndex(i - 2), this.nextPage(e)) : i < this.rightIndex && (0 == i ? (this.setRightIndex(i + 2), this.setSlidePages(0, [i]), this.goToSlide(0, e)) : (this.setRightIndex(i + 2), this.setSlidePages(this.currentSlide - 1, [i - 1, i]), this.prevPage(e))))
        }
    },
    setRightIndex: function(i) {
        this.rightIndex = i
    },
    nextPage: function(i) {
        2 != this.currentSlide && (this.flipping = !0, this.goToSlide(this.currentSlide + 1, i))
    },
    prevPage: function(i) {
        0 != this.currentSlide && (this.flipping = !0, this.goToSlide(this.currentSlide - 1, i))
    },
    enablePrev: function(i) {
        this.prevEnabled = i
    },
    enableNext: function(i) {
        this.nextEnabled = i
    },
    resetZoom: function() {},
    setSlidePages: function(i, e) {
        for (var s = [], t = 0; t < e.length; t++) s.push(e[t].index);
        if (!this.slides[i].pages || s.join("") !== this.slides[i].pages.join("")) {
            this.clearSlidePages(i);
            var o = this.slides[i].find(".slide-inner");
            for (t = 0; t < e.length; t++) {
                var h = e[t].index;
                this.pagesArr[h] && (o.append(this.pagesArr[h].$wrapper), this.slides[i].pages.push(h))
            }
            this.resizeInnerSlides(), this.slides[i].iscroll && this.slides[i].iscroll.refresh()
        }
    },
    updateTool: function() {
        switch (this.options.main.tool) {
            case "toolSelect":
                this.disableFlip(), this.disablePan(), jQuery(".flipbook-textLayer").css("pointer-events", "auto").removeClass(".flipbook-noselect");
                break;
            case "toolMove":
                this.onZoom(this.options.main.zoom), jQuery(".flipbook-textLayer").css("pointer-events", "none").addClass(".flipbook-noselect")
        }
    },
    clearSlidePages: function(i) {
        this.slides[i].find(".slide-inner").empty(), this.slides[i].pages = []
    },
    setZoomPages: function(i) {
        if (!this.$zoomScroller.pages || this.$zoomScroller.pages.join("") != i.join("")) {
            this.$zoomScroller.empty(), this.$zoomScroller.pages = [];
            for (var e = 0; e < i.length; e++) {
                var s = i[e];
                this.pagesArr[s] && (this.$zoomScroller.append(this.pagesArr[s].$wrapper), this.$zoomScroller.pages.push(s))
            }
        }
    },
    resizeZoomPages: function(i, e) {
        var s = this.$wrapper.height() * e,
            t = 500 * parseInt(s / 500) + 500;
        t < 500 && (t = 500), 2e3 < t && (t = 2e3);
        for (var o = 0; o < i.length; o++) {
            var h = i[o];
            this.pagesArr[h] && this.pagesArr[h].load()
        }
    },
    getCurrentSlidePages: function() {
        return this.singlePage ? [this.rightIndex] : [this.rightIndex - 1, this.rightIndex]
    },
    clearSlide: function(i) {
        this.slides[i].empty()
    },
    hasPage: function(i, e) {},
    loadVisiblePages: function() {
        var i = this.options.main,
            e = this.rightIndex;
        this.options.rightToLeft && this.options.oddPages && e--;
        var s = this.pagesArr[e],
            t = this.pagesArr[e - 1],
            o = this.pagesArr[e + 1],
            h = this.pagesArr[e + 2],
            n = this.pagesArr[e - 2],
            l = this.pagesArr[e - 3];
        this.singlePage ? s ? s.load(function() {
            i.setLoadingProgress(1), t && t.load(), o && o.load()
        }) : t && t.load() : t ? t.load(function() {
            s ? s.load(function() {
                i.setLoadingProgress(1), n && n.load(), l && l.load(), o && o.load(), h && h.load()
            }) : (i.setLoadingProgress(1), n && n.load(), l && l.load())
        }) : s && s.load(function() {
            i.setLoadingProgress(1), o && o.load(), h && h.load()
        })
    },
    updateVisiblePages: function() {
        this.options.main;
        var i = this.rightIndex;
        this.options.rightToLeft && this.options.oddPages && i--;
        var e = this.pagesArr[i],
            s = this.pagesArr[i - 1],
            t = this.pagesArr[i + 1],
            o = this.pagesArr[i + 2],
            h = this.pagesArr[i - 2],
            n = this.pagesArr[i - 3];
        this.singlePage ? s ? t ? (this.setSlidePages(1, [e]), this.setSlidePages(0, [s]), this.setSlidePages(2, [t]), this.goToSlide(1, !0)) : (this.setSlidePages(2, [e]), this.setSlidePages(1, [s]), this.goToSlide(2, !0), this.clearSlidePages(0)) : (this.setSlidePages(0, [e]), t ? this.setSlidePages(1, [t]) : this.clearSlidePages(1), this.goToSlide(0, !0), this.clearSlidePages(2)) : s ? e ? t ? h ? (this.setSlidePages(1, [s, e]), n ? this.setSlidePages(0, [n, h]) : this.setSlidePages(0, [h]), o ? this.setSlidePages(2, [t, o]) : this.setSlidePages(2, [t]), this.goToSlide(1, !0)) : (this.setSlidePages(0, [s, e]), o ? this.setSlidePages(1, [t, o]) : this.setSlidePages(1, [t]), this.clearSlidePages(2)) : (this.setSlidePages(2, [s, e]), n ? this.setSlidePages(1, [n, h]) : this.setSlidePages(1, [h]), this.goToSlide(2, !0), this.clearSlidePages(0)) : (this.setSlidePages(2, [s]), n ? this.setSlidePages(1, [n, h]) : this.setSlidePages(1, [h]), this.goToSlide(2, !0), this.clearSlidePages(0)) : (this.setSlidePages(0, [e]), o ? this.setSlidePages(1, [t, o]) : this.setSlidePages(1, [t]), this.goToSlide(0, !0), this.clearSlidePages(2)), this.loadVisiblePages(), this.options.main.turnPageComplete()
    },
    loadPage: function(i) {
        this.pagesArr[i] && this.pagesArr[i].load()
    },
    hidePage: function(i) {},
    showPage: function(i) {},
    disable: function() {
        this.enabled = !1
    },
    enable: function() {
        this.enabled = !0, this.onResize()
    },
    resize: function() {},
    onResize: function() {
        var i = this.$wrapper.width(),
            e = this.$wrapper.height();
        if (this.w = i, this.h = e, 0 != i && 0 != e) {
            var s, t = this.pageWidth,
                o = this.pageHeight,
                h = 2 * this.options.zoomMin * t / o > i / e,
                n = !this.options.singlePageMode && (!this.options.responsiveView || i > this.options.responsiveViewTreshold || !h),
                l = n ? 2 * t : t,
                a = o;
            this.bw = l, s = (this.bh = a) / l < e / i ? a / l * i / this.options.pageTextureSize : e / this.options.pageTextureSize;
            for (var r = 0; r < this.slides.length; r++) this.slides[r].width(i + 0).height(e), this.slides[r].iscroll && (this.slides[r].iscroll.options.zoomMin = this.options.zoomMin * s, this.slides[r].iscroll.options.zoomMax = this.options.zoomMax * s, this.slides[r].iscroll.refresh());
            this.$scroller.width(this.$scroller.children().length * (i + 0)), this.iscroll.refresh(), n && !this.options.singlePageMode || this.singlePage ? n && !this.options.singlePageMode && this.singlePage && (this.rightIndex % 2 != 0 && this.setRightIndex(this.rightIndex + 1), this.singlePage = !1, this.resizeInnerSlides()) : (this.rightIndex % 2 == 0 && 0 < this.rightIndex && this.setRightIndex(this.rightIndex - 1), this.singlePage = !0, this.resizeInnerSlides()), this.updateVisiblePages()
        }
    },
    resizeInnerSlides: function() {
        var i = this.options.pageTextureSize * this.pageWidth / this.pageHeight;
        90 != this.rotation && 270 != this.rotation || (i = this.options.pageTextureSize * this.pageHeight / this.pageWidth);
        for (var e = this.singlePage ? i : 2 * i, s = 0; s < 3; s++) e = this.slides[s].pages && 1 == this.slides[s].pages.length ? i : 2 * i, this.slides[s].find(".slide-inner").width(e)
    },
    resizeInnerSlide: function(i) {
        var e = this.options.pageTextureSize * this.pageWidth / this.pageHeight;
        this.slides[i].pages.length, this.slides[i].find(".slide-inner").width(e)
    },
    goToSlide: function(i, e) {
        var s = e ? 0 : 300 * this.options.pageFlipDuration,
            t = this.slides[i];
        t.pages && t.pages[0] && this.pagesArr[t.pages[0]].updateHtmlContent(), 0 < this.iscroll.pages.length && this.iscroll.goToPage(i, 0, s), e && (this.currentSlide = i), this.zoomTo(this.options.zoomMin)
    },
    getCurrentSlide: function() {
        return this.currentSlide
    },
    zoomIn: function(i, e, s) {
        s && "mousewheel" === s.type || this.zoomTo(i)
    },
    zoomTo: function(i, e, s, t) {
        if (this.enabled) {
            s = s || 0, t = t || 0, e = e || 0;
            if (1 < i && this.disableFlip(), 0 != h && 0 != n) {
                var o, h = this.w,
                    n = this.h,
                    l = (this.pageWidth, this.pageHeight, this.bw),
                    a = this.bh;
                o = a / l < n / h ? a / l * i * h / this.options.pageTextureSize : i * n / this.options.pageTextureSize;
                for (var r = 0; r < 3; r++) this.slides[r].iscroll && this.slides[r].iscroll.zoom(o, s, t, e);
                this.onZoom(i), this.loadVisiblePages()
            }
        }
    },
    zoomOut: function(i) {
        this.zoomTo(i)
    },
    onZoom: function(i) {
        "toolSelect" == this.options.main.tool ? (this.disableFlip(), this.disablePan()) : 1 < i ? (this.disableFlip(), this.enablePan()) : this.enableFlip(), this.options.main.onZoom(i)
    },
    rotateLeft: function() {
        this.rotation = (this.rotation + 360 - 90) % 360;
        for (var i = 0; i < this.pagesArr.length; i++) {
            this.pagesArr[i].setRotation(this.rotation)
        }
        this.resizeInnerSlides(), this.onResize(), console.log(this.rotation)
    },
    rotateRight: function() {
        this.rotation = (this.rotation + 360 + 90) % 360;
        for (var i = 0; i < this.pagesArr.length; i++) {
            this.pagesArr[i].setRotation(this.rotation)
        }
        this.resizeInnerSlides(), this.onResize(), console.log(this.rotation)
    },
    enableAutoplay: function(i) {},
    updateCurrentPage: function(i) {},
    enable: function() {
        this.enabled = !0
    },
    disable: function() {
        this.enabled = !1
    },
    onSwipe: function(i, e, s, t, o, h, n) {},
    onPageUnloaded: function(i, e) {
        var s = this.options.rightToLeft ? this.options.numPages - i - 1 : i;
        this.pagesArr[s].unload()
    },
    disableFlip: function() {
        this.flipEnabled = !1, this.iscroll.disable()
    },
    enableFlip: function() {
        1 != this.options.numPages ? (this.flipEnabled = !0, this.iscroll.enable()) : this.disableFlip()
    },
    enablePan: function() {
        this.slides[0].iscroll && this.slides[0].iscroll.enable(), this.slides[1].iscroll && this.slides[1].iscroll.enable(), this.slides[2].iscroll && this.slides[2].iscroll.enable()
    },
    disablePan: function() {
        this.slides[0].iscroll && this.slides[0].iscroll.disable(), this.slides[1].iscroll && this.slides[1].iscroll.disable(), this.slides[2].iscroll && this.slides[2].iscroll.disable()
    }
}, FLIPBOOK.PageSwipe = function(i, e, s, t, o) {
    this.rotation = 0, this.index = s, this.options = e, this.texture = t, this.html = o, this.index = s, this.$wrapper = jQuery("<div>").addClass("flipbook-carousel-page"), this.wrapper = this.$wrapper[0], this.model = i, this.$inner = jQuery("<div>").appendTo(this.$wrapper).addClass("flipbook-carousel-page-inner"), this.$bg = jQuery("<div>").appendTo(this.$inner).addClass("flipbook-carousel-page-bg"), this.$html = jQuery("<div>").appendTo(this.$inner).addClass("flipbook-carousel-page-html"), e.pagePreloader ? this.$preloader = jQuery('<img src="' + e.pagePreloader + '" class="flipbook-page-preloader-image">').appendTo(this.$inner) : this.$preloader = jQuery('<img src="' + e.assets.spinner + '" class="flipbook-page-preloader">').appendTo(this.$inner), this.setSize(this.pw, this.ph)
}, FLIPBOOK.PageSwipe.prototype = {
    load: function(t) {
        var i = this.options.rightToLeft ? this.options.numPages - this.index - 1 : this.index,
            o = this;
        this.loaded ? t && t.call(this) : (this.loaded = !0, this.options.main.loadPageHTML(i, function(i) {
            o.htmlContent = i, o.updateHtmlContent()
        }), this.options.main.loadPage(i, this.options.pageTextureSize, function(i) {
            if (i.image) {
                var e = i.image;
                o.$img = jQuery(e).addClass("page-carousel-img");
                i.image.naturalHeight;
                var s = i.image.naturalHeight;
                o.options.pageWidth, o.options.pageHeight;
                o.$img.appendTo(o.$bg), o.options.doublePage && 0 < o.index && o.index % 2 == 0 && o.$img.css("left", "-100%"), o.options.doublePage ? 0 == o.index || o.index == o.options.pages.length - 1 && !o.options.oddPages ? o.$img.css("width", "100%") : o.$img.css("width", "200%") : o.$img.css("width", "100%"), o.$preloader.remove()
            }
            i.canvas && o.pageSize != i.size && (o.pageSize = i.size, o.$bg.empty(), o.options.doublePage && o.index % 2 == 0 && 0 != o.index ? jQuery(i.rCanvas).appendTo(o.$bg) : o.options.doublePage && o.index % 2 == 1 && o.index != o.options.pages.length - 1 ? jQuery(i.lCanvas).appendTo(o.$bg) : jQuery(i.canvas).appendTo(o.$bg), o.$preloader.remove()), o.setRotation(), t && t.call(o)
        }))
    },
    unload: function() {
        this.loaded = !1, this.pageSize = 0, this.size = 0, this.$preloader.appendTo(this.$inner)
    },
    dispose: function() {
        this.pageSize && (this.pageSize = null, this.$bg.empty())
    },
    setSize: function() {
        var i, e = this.options.pageTextureSize;
        i = 0 == this.rotation || 180 == this.rotation ? e * this.options.pageWidth / this.options.pageHeight : (this.$wrapper.width(e).height(i), e * this.options.pageHeight / this.options.pageWidth), this.pw = i, this.ph = e, this.$wrapper.width(i).height(e), this.updateHtmlContent()
    },
    setRotation: function(i) {
        this.setSize(), this.options.doublePage || (void 0 !== i && (this.rotation = i), this.$img && (this.$img.css("transform", "rotate(" + this.rotation + "deg) translateZ(0)"), 90 == this.rotation || 270 == this.rotation ? this.$img.width(this.$wrapper.height()).height(this.$wrapper.width()) : this.$img.width(this.$wrapper.width()).height(this.$wrapper.height())))
    },
    updateHtmlContent: function() {
        var i = this.ph / 1e3,
            e = this.htmlContent;
        e && (e[0] && (e = e[0]), this.$html.empty().append(jQuery(e)), e.style.transform = "scale(" + i + ") translateZ(0)", this.options.doublePage && (this.index % 2 == 0 && 0 < this.index ? e.style.left = "-100%" : e.style.left = "0"))
    }
};